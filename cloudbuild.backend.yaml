steps:
  # 0. Copy environment file
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "${_ENV}", ".env"]
    dir: "be"

  # 0.5. Verify environment file
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "=== Checking environment file ==="
        if [ -f .env ]; then
          echo "✅ .env file exists"
          echo "Environment variables (hiding sensitive data):"
          sed 's/=.*/=[HIDDEN]/' .env
        else
          echo "❌ .env file not found"
          exit 1
        fi
    dir: "be"

  # 1. Build Docker image untuk backend
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/bahasa-app-backend", "."]
    dir: "be"

  # 2. Push ke Container Registry / Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/bahasa-app-backend"]

  # 2.5. Verify .env file for Cloud Run deployment
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "=== Preparing environment variables for Cloud Run ==="
        if [ -f .env ]; then
          echo "✅ .env file found for deployment"
          echo "Environment variables that will be deployed:"
          # Show non-empty, non-comment lines
          grep -E '^[A-Z_]+=' .env | sed 's/=.*/=[HIDDEN]/' || echo "No environment variables found"
          echo ""
          echo "Total environment variables: $(grep -E '^[A-Z_]+=' .env | wc -l)"
        else
          echo "❌ .env file not found for deployment"
          exit 1
        fi
    dir: "be"

  # 3. Deploy ke Cloud Run dengan environment variables
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "=== Loading environment variables from .env ==="
        
        # Read .env file and build the env vars string
        ENV_VARS_LIST=""
        while IFS='=' read -r key value || [ -n "$$key" ]; do
          # Skip empty lines and comments
          if [ -n "$$key" ] && [ "$${key#'#'}" = "$$key" ]; then
            # Remove surrounding quotes if present
            clean_value=$$(echo "$$value" | sed 's/^"//;s/"$$//' | tr -d '\r')
            if [ -z "$$ENV_VARS_LIST" ]; then
              ENV_VARS_LIST="$$key=$$clean_value"
            else
              ENV_VARS_LIST="$$ENV_VARS_LIST,$$key=$$clean_value"
            fi
          fi
        done < .env
        
        # Add NODE_ENV to the list
        ENV_VARS_LIST="NODE_ENV=production,$$ENV_VARS_LIST"
        
        echo "=== Deploying to Cloud Run ==="
        echo "Environment variables to be set: $$(echo "$$ENV_VARS_LIST" | sed 's/=[^,]*=[^,]*/=[HIDDEN]/g')"
        
        gcloud run deploy bahasa-app-backend \
        --image gcr.io/$PROJECT_ID/bahasa-app-backend \
        --timeout 1000s \
        --port 3000 \
        --region us-central1 \
        --allow-unauthenticated \
        --set-env-vars "$$ENV_VARS_LIST"
        
        echo "✅ Deployment completed"
    dir: "be"

# Log hanya akan disimpan di Google Cloud Logging
# Log tidak akan disimpan di Google Cloud Storage (butuh hak akses).
options:
  logging: CLOUD_LOGGING_ONLY