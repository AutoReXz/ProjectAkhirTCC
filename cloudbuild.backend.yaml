steps:
  # 0. Copy environment file
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "${_ENV}", ".env"]
    dir: "be"

  # 0.5. Verify environment file
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "=== Checking environment file ==="
        if [ -f .env ]; then
          echo "✅ .env file exists"
          echo "Environment variables (hiding sensitive data):"
          sed 's/=.*/=[HIDDEN]/' .env
        else
          echo "❌ .env file not found"
          exit 1
        fi
    dir: "be"

  # 1. Build Docker image untuk backend
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/bahasa-app-backend", "."]
    dir: "be"

  # 2. Push ke Container Registry / Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/bahasa-app-backend"]

  # 2.5. Verify .env file for Cloud Run deployment
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "=== Preparing environment variables for Cloud Run ==="
        if [ -f .env ]; then
          echo "✅ .env file found for deployment"
          echo "Environment variables that will be deployed:"
          # Show non-empty, non-comment lines
          grep -E '^[A-Z_]+=' .env | sed 's/=.*/=[HIDDEN]/' || echo "No environment variables found"
          echo ""
          echo "Total environment variables: $(grep -E '^[A-Z_]+=' .env | wc -l)"
        else
          echo "❌ .env file not found for deployment"
          exit 1
        fi
    dir: "be"

  # 3. Deploy ke Cloud Run dengan environment variables
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "=== Loading environment variables from .env ==="
        
        # Read .env file and build the env vars string
        ENV_VARS_LIST=""
        while IFS= read -r line || [ -n "$$line" ]; do
          # Remove carriage return and trim whitespace
          line=$$(echo "$$line" | tr -d '\r' | sed 's/^[[:space:]]*//;s/[[:space:]]*$$//')
          
          # Skip empty lines and comments (both # and //)
          if [ -n "$$line" ] && [ "$${line#'#'}" = "$$line" ] && [ "$${line#'//'}" = "$$line" ]; then
            # Check if line contains '='
            if echo "$$line" | grep -q '='; then
              # Extract key and value
              key=$$(echo "$$line" | cut -d'=' -f1 | sed 's/^[[:space:]]*//;s/[[:space:]]*$$//')
              value=$$(echo "$$line" | cut -d'=' -f2- | sed 's/^[[:space:]]*//;s/[[:space:]]*$$//')
              
              # Only process if key is not empty and contains valid characters
              if [ -n "$$key" ] && echo "$$key" | grep -q '^[A-Z_][A-Z0-9_]*$$'; then
                # Remove surrounding quotes if present
                clean_value=$$(echo "$$value" | sed 's/^"//;s/"$$//' | sed "s/^'//;s/'$$//")
                
                if [ -z "$$ENV_VARS_LIST" ]; then
                  ENV_VARS_LIST="$$key=$$clean_value"
                else
                  ENV_VARS_LIST="$$ENV_VARS_LIST,$$key=$$clean_value"
                fi
                echo "Added: $$key=[HIDDEN]"
              else
                echo "Skipped invalid key: $$key"
              fi
            else
              echo "Skipped line without '=': $$line"
            fi
          else
            if [ -n "$$line" ]; then
              echo "Skipped comment/empty: $$line"
            fi
          fi
        done < .env
        
        # Add NODE_ENV to the list
        ENV_VARS_LIST="NODE_ENV=production,$$ENV_VARS_LIST"
        
        echo "=== Deploying to Cloud Run ==="
        echo "Total environment variables to deploy: $$(echo "$$ENV_VARS_LIST" | tr ',' '\n' | wc -l)"
        echo "Environment variables preview:"
        echo "$$ENV_VARS_LIST" | tr ',' '\n' | sed 's/=.*/=[HIDDEN]/' | head -5
        echo "..."
        
        # Deploy with error checking
        if gcloud run deploy bahasa-app-backend \
        --image gcr.io/$PROJECT_ID/bahasa-app-backend \
        --timeout 1000s \
        --port 3000 \
        --region us-central1 \
        --allow-unauthenticated \
        --set-env-vars "$$ENV_VARS_LIST"; then
          echo "✅ Deployment completed successfully"
        else
          echo "❌ Deployment failed"
          exit 1
        fi
    dir: "be"

# Log hanya akan disimpan di Google Cloud Logging
# Log tidak akan disimpan di Google Cloud Storage (butuh hak akses).
options:
  logging: CLOUD_LOGGING_ONLY